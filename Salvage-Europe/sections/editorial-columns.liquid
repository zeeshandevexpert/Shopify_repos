{%- liquid

  assign has_title = false

  if section.settings.title != blank
    assign has_title = true
  endif

  assign sm_render = '100vw'
  assign md_render = 'calc(100vw / ' | append: section.blocks.size | append: ')'
  assign lg_render = 'calc(1600px / ' | append: section.blocks.size | append: ')'

-%}


<section class="global__section section-{{ section.id }} editorial__section{% if section.settings.no_bottom_margin %} mb0{% endif %}" data-section-id="{{ section.id }}" data-aos="{{ settings.scroll_animation }}">
  <div class="row">
    <div class="editorial__column-container rg0 grid__wrapper section-{{ section.id }}">

      {% if has_title %}
      <div class="rich__text-heading span-12 center">
        {% if section.settings.background == settings.background or section.settings.background == '' or section.settings.background == 'rgba(0,0,0,0)' %}
          {% render 'section-headings', type: section.settings.title %}
        {% else %}
          <h2 class="center">{{ section.settings.title | escape }}</h2>
        {% endif %}
      </div>
      {% endif %}

      {% unless section.settings.rich_text == blank %}
      <div class="rich__text-content rt-{{ section.id }} span-12 center">
          <div class="rte">
            {{ section.settings.rich_text }}
          </div>
      </div>
      {% endunless %}

      {% if section.blocks.size > 0 %}

        {% for block in section.blocks %}

          {%- liquid

            assign has_image = false
            assign has_overlay = false
            assign image_is_link = false
            assign button_is_link = false
            assign no_caption = false
            assign has_title = false
            assign has_text = false

            if block.settings.image != blank
              assign has_image = true
            endif

            if block.settings.overlay
              assign has_overlay = true
            endif

            if block.settings.link != blank and block.settings.button_text == blank
              assign image_is_link = true
            endif

            if block.settings.link != blank and block.settings.button_text != blank
              assign button_is_link = true
            endif

            if block.settings.title == blank and block.settings.richtext == blank and block.settings.button_text == blank
              assign no_caption = true
            endif

            if block.settings.title != blank
              assign has_title = true
            endif

            if block.settings.richtext != blank
              assign has_text = true
            endif

            assign text_align = block.settings.text_align

            assign frac = block.settings.column_size | times: 2

          -%}

          <div class="editorial__column block-{{ block.id }}" data-aos="{{ settings.scroll_animation }}" data-aos-delay="{{ forloop.index | times: 150  }}" {{ block.shopify_attributes }}>
            {% if has_image %}
              <div class="editorial__column-image{% if has_overlay %} overlay{% endif %}">
              {% if image_is_link %}<a href="{{ block.settings.link }}">{% endif %}
                {% render 'basic-responsive-image',
                  type: block.settings.image,
                  width: 800,
                  sm_render: sm_render,
                  md_render: md_render,
                  lg_render: lg_render
                %}
              {% if image_is_link %}</a>{% endif %}
              </div>
            {% endif %}

            {% if no_caption == false %}
              <div class="editorial__image--caption {{ text_align }}">
                {% if has_title %}
                  <h3>{{ block.settings.title | escape }}</h3>
                {% endif %}
                {% if has_text %}
                  <div class="rte">
                    {{ block.settings.richtext }}
                  </div>
              {% endif %}
                {% if button_is_link %}
                <div class="editorial__column-btn-wrapper">
                  <a href="{{ block.settings.link }}" class="button">{{ block.settings.button_text | escape }}</a>
                </div>
                {% endif %}
              </div>
            {% endif %}

            <style>
              .editorial__column.block-{{ block.id }} {
                  {% if section.blocks.size == 1 and frac == 2 %}
                    grid-column: 6 /  8;
                    width: 100%;
                  {% elsif section.blocks.size == 1 and frac == 4 %}
                    grid-column: 5 /  9;
                    width: 100%;
                  {% elsif section.blocks.size == 1 and frac == 6 %}
                    grid-column: 4 / 10;
                    width: 100%;
                  {% elsif section.blocks.size == 1 and frac == 8 %}
                    grid-column: 3 / 11;
                    width: 100%;
                  {% elsif section.blocks.size == 1 and frac == 10 %}
                    grid-column: 2 / 12;
                    width: 100%;
                  {% elsif section.blocks.size == 2 and frac == 4 and forloop.first %}
                    grid-column: 3 / span {{ frac }};
                  {% else %}
                    grid-column: auto / span {{ frac }};
                  {% endif %}
              }
              @media screen and (max-width: 740px) {
                .editorial__column.block-{{ block.id }} {
                    grid-column: auto / span 12;
                }
              }
            </style>
          </div>
        {% endfor %}

      {% else %}
        <div class="span-12 center">
          <div class="content-onboard">
            <p>Add blocks to the section in the sidebar.</p>
          </div><!-- /.content-onboard -->
        </div><!-- /.span-12 -->
      {% endif %}
    </div>
  </div>
  {%- liquid

      assign image_height = section.settings.image_height | append: 'px'
      assign mobile_image_height = section.settings.mobile_image_height | append: 'px'

  -%}

  <style>
  .section-{{ section.id }}.editorial__section {
    background: {{ section.settings.background }};
    color: {{ section.settings.color }};
    padding-top: {{ section.settings.padding }}px;
    {% if section.settings.title != blank %}
    padding-bottom: calc({{ section.settings.padding }}px + 25px);
    {% else %}
    padding-bottom: {{ section.settings.padding }}px;
    {% endif %}
  }
  .editorial__column-container.section-{{ section.id }} h2,
  .editorial__column-container.section-{{ section.id }} h3,
  .editorial__column-container.section-{{ section.id }} p,
  .editorial__column-container.section-{{ section.id }} .rte a {
    color: {{ section.settings.color }};
  }
  .editorial__column-container.section-{{ section.id }} .editorial__column-image .onboard svg.placeholder-svg {
      height: {{ image_height }};
      width: 100%;
  }
  .editorial__column-container.section-{{ section.id }} .editorial__column-image {
    height: {{ image_height }};
    overflow: hidden;
  }
  .editorial__column-container.section-{{ section.id }} .editorial__column-image .box-ratio {
    padding-bottom: {{ image_height }} ! important;
  }
  .editorial__column-container.section-{{ section.id }} .editorial__column-image img {
    height: {{ image_height }};
    object-fit: cover;
    object-position: center;
  }
  @media screen and (max-width: 740px) {
    .editorial__column-container.section-{{ section.id }} .editorial__column-image {
      height: {{ mobile_image_height }};
    }
    .editorial__column-container.section-{{ section.id }} .editorial__column-image .box-ratio {
      padding-bottom: {{ mobile_image_height }} ! important;
    }
    .editorial__column-container.section-{{ section.id }} .editorial__column-image img {
      height: {{ mobile_image_height }};
    }
  }
  .editorial__column-container {
    grid-gap: 21px;
  }
  .editorial__column-image {
    margin-bottom: 20px;
  }
  </style>
</section>
{% comment %} "max_blocks": 3, {% endcomment %}

{% schema %}
{
  "name": "Editorial columns",

  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Spotlight on"
    },
    {
      "type": "richtext",
      "id": "rich_text",
      "label": "Text",
      "default": "<p>Add some editorial columns to your page</p>"
    },
    {
      "type":      "range",
      "id":        "image_height",
      "min":       100,
      "max":       1000,
      "step":      50,
      "unit":      "px",
      "label":     "Image height",
      "default":   400
    },
    {
      "type":      "range",
      "id":        "mobile_image_height",
      "min":       100,
      "max":       1000,
      "step":      50,
      "unit":      "px",
      "label":     "Mobile image height",
      "default":   400
    },
    {
      "type":"checkbox",
      "id":"no_bottom_margin",
      "label":"Remove bottom margin",
      "default": false
    },
    {
      "type":"color",
      "label":"Text color",
      "id":"color",
      "default":"#000"
    },
    {
      "type":"color",
      "label":"Background color",
      "id":"background"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 30
    }
  ],
	"blocks": [
    {
      "type": "image_with_text",
      "name": "Image with text",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "800px x 800px recommended"
        },
        {
          "type":"header",
          "content":"Content"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Our collections"
        },
        {
          "type": "richtext",
          "id": "richtext",
          "label": "Text",
          "default": "<p>Add text to your image</p>"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": "Button"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link",
          "info": "Optional"
        },
        {
          "type":"header",
          "content":"Style"
        },
        {
          "type": "select",
          "id": "text_align",
          "label": "Text alignment",
          "default": "a-center",
          "options": [
            {
              "value": "a-left",
              "label": "Left"
            },
            {
              "value": "a-center",
              "label": "Center"
            },
            {
              "value": "a-right",
              "label": "Right"
            }
          ]
        },
        {
          "type":      "range",
          "id":        "column_size",
          "min":       1,
          "max":       6,
          "step":      1,
          "label":     "Block size",
          "default":   2,
          "info": "Choose how many blocks this will fill (max 6 blocks per row)"
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": [
      "404",
      "article",
      "blog",
      "cart",
      "collection",
      "index",
      "list-collections",
      "page",
      "product",
      "search",
      "customers/account"
    ]
  },
  "presets": [
    {
      "name": "Editorial columns",
      "blocks": [
          {
            "type": "image_with_text"
          },
          {
            "type": "image_with_text"
          },
          {
            "type": "image_with_text"
          }
        ]
      }
    ]
  }
{% endschema %}
