{%- comment %}
    Author: BSS B2B Login

    DO NOT MODIFY. The contents of BSS B2B Login 
    will overwrite any changes in the next update.

    Updated at: Thu Nov 14 2024
{% endcomment -%}
{% if hide_price == false %} <span class="bss-ltsp-price-wrapper">{{ old_price }}</span> {% else %} <span class="bss-ltsp-price-wrapper"></span> {% endif %} <span id="BsscommercePasswordForm" class="bsscommerce-password-form bss-passcode-wrapper-tag" style="display: none;"> <style> @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } #bsscommerce-password-submit { display: flex; align-items: center; justify-content: center; } </style> <span class=""> <div class="bsscommerce-password-message-container"> <span style="all: initial;">{{ passcode_message }}</span> </div> <div class="bsscommerce-ltap-password" class="cart" novalidate style="display: flex; margin-bottom: 4px"> <div style="background-color: #fff; display: flex; flex: 1; align-items: center; border: 1px solid #ccc; border-radius: 5px; margin-right: 6px"> <input type="password" value="" name="attributes[bsscommerce-password-{{ rule_id }}]" id="bsscommerce-password" class="input-full" style=" width: 100%; padding: 8px 0 8px 10px; font-size: 14px; border-radius: 5px; border: none; margin-right: 5px; box-shadow: none; outline: none;" placeholder=' {%- if input_placeholder_form_submit == "" -%} {{ 'general.password_page.login_form_password_placeholder' | t }} {%- else -%} {{ input_placeholder_form_submit }} {%- endif -%}'> <button class="toggle-passcode-input" type="button" style="background-color: transparent; border: none; line-height: 0; cursor: pointer; padding: 8px; fill: #BABEC3"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M15 12c0 1.654-1.346 3-3 3s-3-1.346-3-3 1.346-3 3-3 3 1.346 3 3zm9-.449s-4.252 8.449-11.985 8.449c-7.18 0-12.015-8.449-12.015-8.449s4.446-7.551 12.015-7.551c7.694 0 11.985 7.551 11.985 7.551zm-7 .449c0-2.757-2.243-5-5-5s-5 2.243-5 5 2.243 5 5 5 5-2.243 5-5z" /></svg> </button> </div> <button id="bsscommerce-password-submit" style=" background-color: #fff; color: #333; border: 1px solid #ccc; padding: 0 15px; border-radius: 5px; cursor: pointer; font-size: 14px; font-weight: bold;" type="submit" onclick="handleSubmit(event)" class="btn" > <div id="bss-spinner" style=" width: 16px; height: 16px; border: 2px solid #f3f3f3; border-top: 2px solid #333; border-radius: 50%; animation: spin 1s linear infinite; display: none; margin: 0 16px;"></div> <span class="button-text"> {%- if button_text_form_submit == '' -%} {{ 'general.password_page.login_form_submit' | t }} {%- else -%} {{ button_text_form_submit }} {%- endif -%} </span> </button> </div> {%- if entered_password != password and entered_password -%} <div class="form-message form-message--error" style="text-align: left; font-size: 16px; color: red;"> <div style="display: flex; align-items: center"> {% capture snippet-error-icon %} {% render 'icon-error' %}{% endcapture %} {% unless snippet-error-icon contains "Liquid error" %} <span style="width: 18px; margin-right: 6px; display: inherit;"> {% render 'icon-error' %} </span> {% endunless %} {%- if message_passcode_incorrect == '' -%} Incorrect password ! {% else %} {{ message_passcode_incorrect }} {% endif %} </div> </div> {%- endif -%} </span> </span> {% capture authentication %}{"domain":"{{ shop.permanent_domain }}","ruleId":"{{ origin_rule_id }}"}{% endcapture %} {% assign authentication = authentication | hmac_sha256: '19f28bb46fef8fa41bd7180b12628ee7' %} <script type="text/javascript"> function handleSubmit(){ let ruleId = "{{ rule_id }}"; if(ruleId.indexOf("-") !== -1){ ruleId = ruleId.slice(0, ruleId.indexOf("-")); } let passcodeElement = document.querySelector(".main-bsscommerce-password-form input[name='attributes[bsscommerce-password-{{ rule_id }}]']"); const passcodeElementValue = passcodeElement.value; const customerId = window.__st.hasOwnProperty('cid') ? window.__st.cid : ""; const pageUrl = window.location.href; let url = "{{ save_usage_history }}"; let product = "{{ product.title }}"; let dataUsage = JSON.stringify({ domain: "{{ shop.permanent_domain }}", passcode: passcodeElementValue, pageUrl: pageUrl, customerId: customerId, ruleId: ruleId, product: product, }); fetch(url,{ method:"POST", headers: { "Content-Type": "application/json", "Authentication": "Bearer {{ authentication }}" }, body: dataUsage }) .then((response) => response.json()) .then((data) => console.log(data.message)) .catch((e) => console.log(e)) } </script>